#Web服务器端口
server:
  port: 8080

#允许消息总线
spring:
  application:
    name: ${project.artifactId}
  cloud:
    consul:
      discovery:
        hostname: localhost    # 配置实例地址
        prefer-ip-address: true # ip自动注册
        port: ${server.port}
        health-check-path: /actuator/health  # 检测实例健康
        health-check-interval: 10s   # 每隔10s检查
        register: true  # 自动注册
        service-name: ${spring.application.name} # 实例名称
        instance-id: ${spring.application.name}:${server.port}
      host: ${ApplicationCenter.url}
      port: ${ApplicationCenter.port}
    #kafka
    stream:
      kafka:
        binder:
          brokers: ${Kafka.brokers}
          replication-factor: 1
#      function:
#        definition: authEventStreamConsumer;tokenEventStreamConsumer
#      bindings:
#        authEventStreamConsumer-in-0:
#          destination: AuthEventStream
#          group: ${project.artifactId}
#        tokenEventStreamConsumer-in-0:
#          destination: TokenEventStream
#          group: null #注：必须为null，用于刷新缓存
    bus:
      enabled: true
  #配置zipkin链路追踪客户端
  zipkin:
    base-url: ${Zipkin.baseUrl}
    enabled: true
    sender:
      type: web
  sleuth:
    sampler:
      probability: ${Zipkin.sampler.probability}



springdoc:
  api-docs:
    # 是否开启接口文档
    enabled: true
  swagger-ui:
    # 持久化认证数据，如果设置为 true，它会保留授权数据并且不会在浏览器关闭/刷新时丢失
    persistAuthorization: true

#调试或者输出日志
logging:
  file:
    name: logs/${project.artifactId}.log
#debug: true